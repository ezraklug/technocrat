// === MIXINS === //

// $size (integer): pixel value of desired font size
// $offset (integer); pixel value used in instances where there is a border mucking up the line-height
@mixin font-sizer($size: $font-size, $offset: 0) {
  @include rem('font-size', $size+0px);
  $basefactor: 1;
  // Buffer for font sizes over the line-height
  @if $size >= $base * 2 {
    $basefactor: 2;
  } @elseif $size >= $base {
    $basefactor: 1.5;
  }
  line-height: ( ( ($base - $offset) * $basefactor) / $size );
}

// Highlights text; used with ins and mark tags
@mixin highlight($color: $c-highlight) {
  @include border-radius();
  @include rem('padding', $spacer/12 $spacer/8);
  background: $color;
  border: 1px solid darken($color, 7);
  display: inline;
}

// Right-aligned button container
@mixin button-div() {
  @include rem('margin-left', $spacer/2);
  float: right;
  height: $spacer;
}

// Breakout box
@mixin text-box($color: $c-text-box, $background: $c-text-box-bg, $shadow: $c-text-box-sh) {
  @include border-radius(12px);
  @include box-shadow-layered(inset 4px 4px 8px $shadow, 1px 1px 4px $shadow);
  @include rem('margin', 0 0 $spacer 0);
  @include rem('padding', $spacer $spacer 0);
  background: $background;
  color: $color;
  text-shadow: 0px 1px $c-site-bg;
}



// === TWENTY TWELVE === //

// Gradients
@mixin horizontal-gradient ($startColor: #555, $endColor: #333) {
  background-color: $endColor;
  background-repeat: repeat-x;
  background-image: -khtml-gradient(linear, left top, right top, from($startColor), to($endColor)); // Konqueror
  background-image: -moz-linear-gradient(left, $startColor, $endColor); // FF 3.6+
  background-image: -ms-linear-gradient(left, $startColor, $endColor); // IE10
  background-image: -webkit-gradient(linear, left top, right top, color-stop(0%, $startColor), color-stop(100%, $endColor)); // Safari 4+, Chrome 2+
  background-image: -webkit-linear-gradient(left, $startColor, $endColor); // Safari 5.1+, Chrome 10+
  background-image: -o-linear-gradient(left, $startColor, $endColor); // Opera 11.10
  background-image: linear-gradient(left, $startColor, $endColor); // Le standard
}
@mixin vertical-gradient ($startColor: #efe7d7, $endColor: #dcd2be) {
  background-color: $endColor;
  background-repeat: repeat-x;
  background-image: -khtml-gradient(linear, left top, left bottom, from($startColor), to($endColor)); // Konqueror
  background-image: -moz-linear-gradient(top, $startColor, $endColor); // FF 3.6+
  background-image: -ms-linear-gradient(top, $startColor, $endColor); // IE10
  background-image: -webkit-gradient(linear, left top, left bottom, color-stop(0%, $startColor), color-stop(100%, $endColor)); // Safari 4+, Chrome 2+
  background-image: -webkit-linear-gradient(top, $startColor, $endColor); // Safari 5.1+, Chrome 10+
  background-image: -o-linear-gradient(top, $startColor, $endColor); // Opera 11.10
  background-image: linear-gradient(top, $startColor, $endColor); // The standard
}

// Border radius
@mixin border-radius($radius: 3px) {
  -webkit-border-radius: $radius;
     -moz-border-radius: $radius;
          border-radius: $radius;
}

// Box shadows
@mixin box-shadow($shadow: 0 1px 4px rgba(0, 0, 0, .20)) {
  -webkit-box-shadow: $shadow;
     -moz-box-shadow: $shadow;
          box-shadow: $shadow;
}
@mixin box-shadow-layered($shadow: 0 1px 3px rgba(0,0,0,.25), $shadow-layered: 0 1px 3px rgba(0,0,0,.25) ) {
  -webkit-box-shadow: $shadow, $shadow-layered;
     -moz-box-shadow: $shadow, $shadow-layered;
          box-shadow: $shadow, $shadow-layered;
}

// Transitions
@mixin transition($transition) {
  -webkit-transition: $transition;
     -moz-transition: $transition;
          transition: $transition;
}

// Columns
@mixin columns($count: 3, $gap: 0.714285714rem) {
  -webkit-column-count: $count;
  -webkit-column-gap: $gap;
    -moz-column-count: $count;
    -moz-column-gap: $gap;
      column-count: $count;
      column-gap: $gap;
}

// Rem generator
//
// Baseline, measured in pixels
// The value should be the same as the font-size value for the html element
// If the html element's font-size is set to 62.5% (of the browser's default font-size of 16px),
// then the variable below would be 10px.

@mixin rem($property, $px-values, $offset: 0) {
  // Convert the baseline into rems
  $baseline-rem: $base-default / 1rem;

  // Subtract the offset
  @if type-of($px-values) == "number" {
    $px-values: $px-values - $offset;
  }

  // Print the first line in pixel values
  #{$property}: $px-values;

  // If there is only one (numeric) value, return the property/value line for it.
  @if type-of($px-values) == "number" {
    #{$property}: $px-values / $baseline-rem; }

  // Create an empty list that we can dump values into
  @else {
    $rem-values: unquote("");
    @each $value in $px-values {

      // If the value is zero, return 0
      @if $value == 0 {
        $rem-values: append($rem-values, $value); }
      @else {
        $rem-values: append($rem-values, $value / $baseline-rem); } }

    // Return the property and its list of converted values
    #{$property}: $rem-values; } }
