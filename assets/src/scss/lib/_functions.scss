// ==== FUNCTIONS ==== //

// Direction rotation: use opposite, clockwise, or counterclockwise (or shorthand functions below); adapted from http://www.sitepoint.com/sass-mixins-kickstart-project/
@function k-rotate($direction, $dimension: "opposite") {
  @if not index(top right bottom left, $direction) {
    @warn "Direction must be one of `top`, `right`, `bottom` or `left`; currently `#{$direction}`.";
  } @else {
    @if not index(opposite clockwise counterclockwise, $dimension) {
      @warn "Dimension must be one of `opposite`, `clockwise`, `counterclockwise`; currently `#{$dimension}`.";
    }
    $map: ();
    @if $dimension == "opposite" {
      $map: (
        'top':    'bottom',
        'right':  'left',
        'bottom': 'top',
        'left':   'right'
      );
    }
    @if $dimension == "clockwise" {
      $map: (
        'top':    'right',
        'right':  'bottom',
        'bottom': 'left',
        'left':   'top'
      );
    }
    @if $dimension == "counterclockwise" {
      $map: (
        'top':    'left',
        'right':  'top',
        'bottom': 'right',
        'left':   'bottom'
      );
    }
    $direction: map-get($map, $direction);
  }
  @return $direction;
}
@function k-opposite($direction) {
  @return k-rotate($direction, "opposite");
}
@function k-clockwise($direction) {
  @return k-rotate($direction, "clockwise");
}
@function k-counterclockwise($direction) {
  @return k-rotate($direction, "counterclockwise");
}



// Strip units from any value; via http://hugogiraudel.com/2013/08/12/sass-functions/
@function k-strip-unit($value) {
  @return $value / ($value * 0 + 1);
}
