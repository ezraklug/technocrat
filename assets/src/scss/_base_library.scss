// ==== LIBRARY ==== //

// This file contains all the theme-agnostic functions and mixins that don't rely on anything else; feel free to drop it into other projects

// == MIXINS == //

// Background cover image; pass a URL or relative path wrapped in quotation marks: "http://yoursite.com/image.jpg"
// Source: http://css-tricks.com/perfect-full-page-background-image/
@mixin background-cover($path: false) {
  @if $path {
    background: url(#{$path}) no-repeat center center fixed;
    background-size: cover;
  }
}



// Center block; via Scut
@mixin center-block($max-width: false) {
  margin-left: auto;
  margin-right: auto;
  @if $max-width {
    max-width: $max-width;
  }
}



// Clearfix suite
@mixin clearfix-above {
  &:before {
    content: "";
    display: table;
    clear: both;
  }
}
@mixin clearfix-below {
  &:after {
    content: "";
    display: table;
    clear: both;
  }
}
@mixin clearfix {
  @include clearfix-above;
  @include clearfix-below;
}



// Dashicons mixin for use with WordPress dashicon font
@mixin dashicon($content, $dir: before) {
  &:#{$dir} {
    font-family: "dashicons";
    content: "#{$content}";
  }
}



// Ghosting; use on any element to obscure it from view except on hover
@mixin ghost($value: 0.6) {
  opacity: $value;
  transition: opacity .5s ease;
  &:hover {
    opacity: 1;
    transition: opacity .2s ease-in;
  }
}



// Hanging indent; via Scut
@mixin hanging-indent($indent: 1em) {
  padding-left: $indent;
  text-indent: -$indent;
}



// Hide visually; via Scut
@mixin hide-visually {
  border: 0;
  clip: rect(0 0 0 0);
  height: 1px;
  margin: -1px;
  overflow: hidden;
  padding: 0;
  position: absolute;
  width: 1px;
}



// Floated list; $space inserts a space between items, $dir specifies the direction of the float
@mixin list-floated($space: false, $dir: left) {
  @include clearfix;
  list-style-type: none;
  margin: 0;
  padding: 0;
  & > li {
    float: $dir;
    @if $space {
      margin-#{opposite($dir)}: $space;
    }
  }
  @if $space {
    & > li:last-of-type {
      margin-#{opposite($dir)}: 0;
    }
  }
}



// Nested list in dropdown style; adapted from http://garethcooper.com/2013/05/sass-menu/
@mixin list-nested() {
  & > li {
    position: relative;

    ul,
    ul ul {
      display: none;
      position: absolute;
        left: 0;
        top: 100%;
        z-index: 999;
    }

    // Make submenus appear to the right
    ul ul {
      left: 100%;
      top: 0;
    }

    // Causes list items and links to fill the space
    ul li {
      display: block;
      margin: 0;
      width: 100%;
      a {
        display: block;
      }
    }

    // Displays submenus on hover
    &:hover > ul {
      display: block;
    }

    // Don't display menu items nested more than three deep
    ul ul ul li:hover ul {
      display: none;
    }
  }
}



// Reverse italics; via Scut
@mixin reverse-italics($elements: null) {
  $element-list: em, cite, i;
  @each $el in $elements {
    $element-list: append($element-list, unquote($el), comma)
  }
  font-style: italic;
  #{$element-list} {
    font-style: normal;
  }
}



// Truncate text; via http://web-design-weekly.com/2013/05/12/handy-sass-mixins/
@mixin text-truncate {
  overflow: hidden;
  text-overflow: ellipsis;
  white-space: nowrap;
}



// == FUNCTIONS == //

// Returns the opposite direction; right for left and left for right
@function opposite($dir) {
  @if $dir == right {
    @return left;
  } @else if $dir == left {
    @return right;
  }
  @return $dir;
}



// == DEVELOPMENT == //

// A few untested mixins and functions via Sacha Greif: http://sachagreif.com/useful-sass-mixins/
@function black($opacity) {
  @return rgba(0, 0, 0, $opacity);
}
@function white($opacity) {
  @return rgba(255, 255, 255, $opacity);
}

// Box emboss
@mixin box-emboss($opacity: 0.75, $opacity2: 0.75) {
  box-shadow: white($opacity) 0 1px 0, inset black($opacity2) 0 1px 0;
}

// Letterpress
@mixin letterpress($opacity) {
  text-shadow: white($opacity) 0 1px 0;
}