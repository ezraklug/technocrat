// ==== INTERFACE ==== //

// This partial is meant to contain all user interface elements: buttons, forms, and so on...

// == BUTTONS == //

button,
.button,
input[type="button"],
input[type="reset"],
input[type="submit"] {
  @include button-capsule;
  @include button-capsule-flat;
}

// Containers and groups by functionality
.buttons {
  @include button-group;
}
.buttons-merge {
  @include button-merge;
}
.buttons-left {
  @include button-group(left);
}
.buttons-merge-left {
  @include button-merge(left);
}



// == FORMS == //

// General form styling rules; applies to contact, comments, password, and search forms in the site content area
.site-content form {
  @extend %links-no-border;
  @include font-size(head-smaller);
  input[type="email"],
  input[type="text"],
  input[type="url"] {
    width: percentage( ( ( $width-medium / 2 ) - 8 ) / $width-medium ); // Should yield a perfect 50% after accounting for borders and such
  }
  button[type="submit"],
  input[type="submit"] {
    //display: block;
  }
  textarea {
    max-width: $width-medium;
    width: 100%;
  }
  div { // Presumably explanatory text; let's give it some space to breathe
    @extend %spacer-below-half;
  }
}

// Form errors; specific to the contact form for the most part, but designed for reuse
input.error,
textarea.error {
  box-shadow: 0 0 6px rgba( colour(error), .9 );
  border: 1px solid colour(error);
  outline: none;
}

// Labels
label {
  &:not(.error):not(.checkbox-label) {
    @include font-style(label);
    display: block;
  }
  &.checkbox-label {
    @include font-size(text-smaller);
    @include rem( margin-left, 6px );
    display: inline;
  }
  &.error {
    @include font-size(text-smaller);
    color: colour(error);
    display: block; // Errors go below inputs
    font-weight: font(body-bold);
  }
}

// General form classes
.alert {
  @extend %spacer-below-half;
}
.error {
  color: colour(error);
  font-weight: font(body-bold);
}
.notice {
  font-style: italic;
}
.required {
  color: colour(required);
}
.success {
  color: colour(success);
}
.warning {
  color: colour(error);
  font-style: italic;
}

// Post password form
.form-post-password {
  @extend %spacer-below;
  button {
    @include rem( margin, 0 0 0 6px );
  }
}

// Specific to the contact form (CF1)
.contact-form-spinner,
.contact-form-status {
  @extend %spacer-above;
}



// == RESPONSIVE MENU == //

// Responsive menu toggle for mobile phones and small screens
.menu-toggle {
  @include k-media-above( break(medium) ) {
    display: none;
  }
  &.active {
    @include text-shadow-small-svg( $y: -1px );
  }
}



// == SEARCH FORM == //

// Search form input field stretches to the width of the contain; adapted from: http://boulderinformationservices.wordpress.com/2011/02/02/input-field-and-submit-button-on-the-same-line-full-width/
.search-form {
  //@include font-size(text-smallest); // Keeps the search button from getting too large for some reason; @TODO: puzzle this bug out
  overflow: hidden; // Fixes weird IE display (July 8, 2015)
  width: 60%;
  .site-interface & {
    display: none;
    @include k-media-above( break(medium) ) {
      @include rem( margin-left, spacer(1/2) );
      display: block;
      flex: 1;
      max-width: 400px;
    }
  }
  .site-navigation & {
    @include rem( margin-bottom, spacer(1/2) );
    width: 100%;
    @include k-media-above( break(medium) ) {
      display: none;
    }
  }
}
.search-field-wrap {
  overflow: hidden;
  padding-right: spacer(1/4);
}
.search-field {
  width: 100%;
  &:focus {
    outline: none; // Remove a weird glow caused by all this CSS voodoo
  }
}
.search-submit {
  float: right;
  margin: 0 0 0 6px;
}



// == SELECTRIC == //

// Replaces default select menus with a bit of jQuery magic; see `lib/_selectric.scss` for actual styling
@include selectric;

// Handles the flash of unstyled selects in the sidebar; note: if JavaScript fails to load these select elements won't function
select {
  .widget & {
    opacity: 0;
  }
}



// == SKIP LINKS == //

// Hidden until focused; for accessibility purposes
.skip-link {
  opacity: 0;
  position: fixed;
  right: 99999%;
  &:focus {
    margin: 0; // Resets `.buttons-left` and allows for this element to be placed earlier in the actual markup
    opacity: 1;
    outline-width: 1px;
    position: static;
    transition: opacity .3s;
  }
}
.buttons-skip-link {
  margin: 0; // Resets `.buttons-left`
}

// Displays on smaller viewports
.skip-top {
  @include k-media-above( break(large) ) {
    @include scut-hide-visually;
  }
}



// == TOOLTIPS == //

// Tooltips are based on the data-tooltip attribute; e.g. <span data-tooltip="This is a tooltip">Hover here!</span>
.tooltip,
span[data-tooltip] {
  @include k-tooltip(
    $offset: spacer() - 6px
  , $tooltip-background: colour(highlight-bg)
  , $tooltip-border: 1px solid colour(interface)
  , $tooltip-border-radius: $radius
  , $tooltip-color: colour(text)
  , $tooltip-font-size: size(text-smaller)
  , $tooltip-triangle-color: colour(interface)
  );
  border-bottom: 1px dotted rgba( colour(text), .4 );
  &:before {
    max-width: 600px;
    width: 50vw;
  }
}
