// ==== VIEWS ==== //

// == GALLERY VIEW == //

.gallery-view {
  figure.wp-caption {
    @include image-overlay(".wp-caption-text", "title");
    // Assumes `float: left` is set elsewhere
  }

  // Responsive gallery view; not especially DRY but it has the advantage of being targetted and precise; no wasted CSS here
  // Won't produce neat 30px margins between images on Firefox because of cross-browser scrollbar inconsistencies; not important enough to fix with JavaScript hackery

  // Custom breakpoints specifically for gallery view
  // Note there will be some minor quirks due to slight differences between these custom breakpoints and those of the rest of the site's interface
  $b-gallery-small: 320 + $spacer*2; // The viewport has to get quite small to trigger this breakpoint but we don't want to lose quality by upscaling the 320px third-square image size
  $b-gallery-medium: 640 + $d-image-spacer + $spacer*3; // Extra spacer at this width as per layout-box mixin
  @include k-media-below($b-gallery-small) {
    .img-group figure.wp-caption {
      margin: 0 0 $d-image-spacer 0;
      max-width: 100%;
    }
  }
  @include k-media-between($b-gallery-small, $b-gallery-medium) {
    $margin-width: $d-image-spacer / 640px;
    .img-group figure.wp-caption {
      margin: 0 percentage($margin-width) percentage($margin-width) 0;
      max-width: percentage(1/2) - percentage($margin-width/2);
      &:nth-of-type(2n) {
        margin-right: 0;
      }
      &:nth-of-type(2n+1) {
        clear: left;
      }
    }
  }
  @include k-media-above($b-gallery-medium) {
    .img-group figure.wp-caption {
      // Calculations based on $content-width presume that gallery view is always full-width
      margin: 0 percentage($d-image-spacer / $content-width) percentage($d-image-spacer / $content-width) 0;
      max-width: percentage(1/3) - percentage( ( ($d-image-spacer * 2 ) / $content-width) / 3 );
      &:nth-of-type(3n) {
        margin-right: 0;
      }
      &:nth-of-type(3n+1) {
        clear: left;
      }
    }
  }
}



// == LIST VIEW == //

// @TODO: this needs some serious work, especially as it relates to _post_formats.scss

// This class only appears in list-view so it is safe to declare it without nesting
.entry-thumbnail {
  float: left;
  width: 150px;
  figure.wp-caption {
    @include image-fade;
    margin: 0;
  }
}

// This section is messy and disorganized mainly to prevent unnecessary nesting
.list-view {
  .entry-title {
    @include font-size($s-header-sub);
    margin: 0;
  }
  article {
    @extend %spacer-below;
    @extend %text-small;
  }

  // Entry meta
  .entry-meta {
    @include font-size($s-text-smallest);
    @include k-clearfix-reset;
    color: $c-text-lightest;
    text-transform: uppercase;
  }

  // Entry content (with more below for full-width styling); @TODO: review the utility of this
  .entry-content-wrapper {
    margin-left: $thumbnail-size + $spacer;
  }
  .entry-content p {
    @extend %text-small;
  }

  // Edge cases
  &.archive .entry-content > p:first-child {
    margin: 0; // Resets margins added to paragraph tags (which is all we should end up with after pulling out an excerpt)
  }

  // Link post format
  .entry-link {
    @include hide;
  }
}

// Full-width list-view
.entry-title {
  @include k-media-above($b-large) {
    .full-width.list-view {
      @include font-size($s-header);
    }
  }
}
.entry-content p {
  @include k-media-above($b-large) {
    .full-width.list-view {
      @include font-size($s-text);
    }
  }
}

// Reset a few things when a list appears within a post or page
.entry-content .list-view article {
  a,
  a:visited {
    border-bottom: none;
  }
  p {
    margin: 0;
  }
}



// == VIEW POSTS SHORTCODE == //

// Nothing yet!
