// ==== REM GENERATOR ==== //

// Rem generator via Twenty Twelve; specify property, pixel values, and optional offset to account for borders and such
@mixin rem($property, $px-values, $offset: 0) {

  // Convert the base font size into rems
  $base-rem: $base-size+0px / 1rem;

  // Only print pixels when legacy browsers are supported
  @if $legacy {

    // Subtract the offset
    @if type-of($px-values) == "number" {
      $px-values: $px-values - $offset;
    }

    // Print the first line in pixel values
    #{$property}: $px-values;
  }

  // If there is only one (numeric) value, return the property/value line for it in rems
  @if type-of($px-values) == "number" {
    #{$property}: $px-values / $base-rem;
  }

  // Create an empty list that we can dump values into
  @else {
    $rem-values: unquote("");
    @each $value in $px-values {

      // Return 0 when the value is either 0 or 0px
      @if unit($value) == px {
        @if $value == 0px {
          $value: 0;
        }
      }
      @if $value == 0 {
        $rem-values: append($rem-values, $value);
      }

      // Return an actual rem value
      @else {
        $rem-values: append($rem-values, $value / $base-rem);
      }
    }

    // Return the property and its list of converted values in rems
    #{$property}: $rem-values;
  }
}
