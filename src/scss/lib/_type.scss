// ==== TYPE ==== //

// Font size mixin; $size (valid size from the size map); $offset (integer); pixel value offset to account for borders and other things that disrupt line-height
@mixin font-size( $size: text, $offset: 0, $height: $base-line ) {
  @include rem( font-size, size($size) + 0px );
  @include line-height( size($size), $offset, $height );
}

// Line-height mixin; calculates the target line-height for an object of (int) $size given the global $baseline
@mixin line-height( $size: $base-size, $offset: 0, $height: $base-line, $buffer: 1 ) {

  // Buffer for font sizes larger than the baseline; simply doubles or triples baseline size as needed
  @if $size >= $height * 2 {
    $buffer: 2.5;
  }
  @elseif $size >= $height {
    $buffer: 1.5;
  }
  line-height: ( ( ($height - $offset) * $buffer) / $size );
}

// Letterpress effect
@mixin text-shadow( $c: rgba( colour(body-bg), .85 ) ) {
  text-shadow: 0px 1px .5px $c;
}
@mixin text-shadow-svg( $c: rgba( colour(body-bg), .85 ) ) {
  text-shadow: 0px 1px .5px $c;
  svg {
    @include text-shadow-svg-icon( $c );
  }
}
@mixin text-shadow-svg-icon( $c: rgba( colour(body-bg), .85 ), $y: 1px ) {
  filter: drop-shadow( 0 $y .5px $c );
}