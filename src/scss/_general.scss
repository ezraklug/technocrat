// ==== GENERAL ==== //

// HTML
html {
  font-size: $base-size + 0px;
}

// Body
body {
  @include font-size(text);
  @include font-style(body);
  color: colour(text);
  background-color: colour(body-bg);
  font-feature-settings: 'liga', 'opbd', 'size', 'init', 'fina'; // Ligatures; optical bounds; optical size; initial and final forms; via: http://www.microsoft.com/typography/otspec/featurelist.htm
  text-rendering: optimizeLegibility;
}

// Headers
h1 {
  @include font-size(head-bigger);
  margin: 0; // Reset normalize.css
}
h2 {
  @include font-size(head-big);
}
h3 {
  @include font-size(head);
}
h4 {
  @include font-size(head-small);
}
h5 {
  @include font-size(head-smaller);
}
h6 {
  @include font-size(head-smallest);
}
h1,
h2,
h3,
h4,
h5,
h6 {
  @include font-style(head);
  color: colour(text-dark);
  font-feature-settings: 'lnum';
  margin-left: -0.04em;
}

// Monospaced
code,
kbd,
pre,
samp,
var {
  @include font-style(mono);
}

// Links; simple site-wide definitions
a {
  color: inherit;
  text-decoration: none;
  transition: color .8s ease-out;
  &:hover {
    transition: color .4s ease;
  }
  &:active {
    outline: 0;
  }
  &:focus {
    outline: thin dotted;
  }
}

// Reset-like things with variables or WordPress-specific styling
abbr {
  border-bottom: 1px dotted rgba( colour(text), .4 );
  line-height: 0;
  &:hover {
    cursor: help;
  }
}
address {
  @extend %spacer-below;
  font-style: normal; // Italics is sometimes a bit harder to read
  &:first-line {
    font-weight: $w-body-bold;
  }
}
b,
strong {
  font-weight: $w-body-bold; // Potentially superfluous; normalize.css sets both to font-weight: bold;
}
cite,
em,
i {
  font-style: italic;
}
// Both s and strike are deprecated but still in use in some places; let's style them the same way we style `del`
del,
s,
strike {
  color: colour(text-lighter);
  opacity: .6;
  text-decoration: line-through;
}
ins {
  @include k-highlight( colour(highlight-bg), $radius );
  text-decoration: none;
}
hr {
  @extend %clearfix;
  @include rem( margin-bottom, spacer(), 1 );
  @include rem( margin-top, spacer() );
  background-color: colour(divider);
  border: 0;
  height: 1px;
}
mark {
  background: transparent; // Reset normalize.css
  color: colour(highlight); // Reset normalize.css
  text-decoration: none;
}
small { // Set to font-size: 80% in Normalize.css; reset to size(text-small here
  @include font-size(text-small);
  color: lighten( colour(text-lightest), 7);
  display: inline-block; // This is non-standard but HTML5 now defines this element as "fine print"
}



// Blockquotes and in-line quotations
blockquote {
  @extend %spacer-below;
  @include font-style(quotation);
  @include font-size(text-small);
  @include k-reverse-italics;
  @include letterpress;
  @include rem( padding, spacer(1/2) spacer(1/2) spacer(1/2) spacer() - 9px );
  background: rgba( colour(body-darker), .25); // Transparent so that blockquotes can be nested
  border-left: 9px solid colour(divider);
  box-shadow: inset 0px -2px 7px colour(shadow-lighter);
  color: rgba( colour(text), .75); // Transparent so that blockquotes can be nested
  quotes: none; // From the Meyer Reset
  &:before, &:after { // From the Meyer Reset
    content: "";
    content: none;
  }
  p {
    &:last-child {
      margin: 0;
    }
    &:first-child:before { // Add opening and closing quotation marks to the blockquote element
      content: "\201C";
    }
    &:nth-last-of-type(1):after { // Correctly adds quotation mark when footer or cite elements are present at the end of the blockquote
      content: "\201D";
    }
  }
  footer { // The footer element of a blockquote adds information about the source of the quotation
    @include font-size(text-smaller);
    display: block;
    font-style: normal;
    text-align: right;
    cite {
      font-style: italic; // Cancelled out by the k-reverse-italics mixin above
    }
    &:before {
      content: "\2014\00a0"; // Citation dash
    }
  }
}
q {
  quotes: none;
  &:before {
    content: "\201C";
  }
  &:after {
    content: "\201D";
  }
}



// Pre and code blocks (but really just code blocks)
pre,
code {
  font-feature-settings: 'liga' 0; // Explicitly switch off ligatures for monospaced fonts
}
pre {
  @extend %spacer-below;
  @include border-radius;
  @include font-size(text-small);
  @include letterpress( black(.3) );
  @include rem( padding, spacer(1/2) );
  background: colour(code-box-bg);
  background-image: repeating-linear-gradient( 45deg, transparent, transparent spacer(1/2), black(.04) spacer(1/2), black(.04) spacer() );
  box-shadow: inset 3px 3px 7px colour(shadow-darker);
  color: colour(code-box);
  tab-size: 2;
  white-space: pre;
  word-wrap: normal; // Allows for horizontal scrollbars
  code {
    white-space: pre; // Allows for horizontal scrollbars
  }
}
code,
kbd,
var {
  display: inline;
  line-height: 0; // Fixes vertical rhythm for oversized monospaced fonts
  white-space: pre-wrap;
}
code {
  div > &,
  em > &,
  li > &,
  p > &,
  strong > & {
    @include k-highlight( rgba( colour(body-darker), .33 ), $radius );
    color: colour(text-lighter);
    font-size: 80%; // Hack for fixing over-sized monospace fonts
  }
}
a code {
  color: colour(link);
}



// Lists and definitions
ul,
ol,
dl {
  font-style: normal;
}
ol,
ul {
  list-style: none;
}
main ol,
main ul {
  > li:before {
    display: inline-block;
    position: absolute;
    text-align: right;
  }
}
main ol {
  counter-reset: list;
  li:before {
    @include font-size(text-smaller);
    @include rem( margin-left, spacer(-2/3) );
    counter-increment: list;
    content: counter(list) ".";
    font-style: italic;
    .full-width & {
      @include font-size(text-small);
    }
  }
  > li ol {
    counter-reset: list2;
    > li:before {
      counter-increment: list2;
      content: counter(list2, lower-alpha) ".";
    }
    > li ol {
      counter-reset: list3;
      > li:before {
        counter-increment: list3;
        content: counter(list3, lower-roman) ".";
      }
    }
  }
}
main ul {
  li:before {
    @include font-size(text-smaller);
    @include rem( margin-left, spacer(-3/5) );
    content: '\002022'; // Bullet: http://codepoints.net/U+2022
    .full-width & {
      @include font-size(text-small);
    }
  }
  > li ul {
    > li:before {
      content: '\002023'; // Triangular bullet: http://codepoints.net/U+2023
    }
    > li ul {
      > li:before {
        content: '\002043'; // Hyphen bullet: http://codepoints.net/U+2043
      }
    }
  }
}
dl {
  @extend %list-style-none;
  dt {
    font-weight: $w-body-bold;
  }
}



// Tables
table {
  font-feature-settings: 'tnum'; // This might just be wishful thinking depending on the font in use
}
caption,
td,
th {
  text-align: left;
}



// Multimedia
figure {
  @extend %spacer-reset; // Reset normalize.css
}
img {
  height: auto; // Make sure images are scaled correctly
  max-width: 100%; // Adhere to container width
  -ms-interpolation-mode: bicubic; // From Twenty Twelve
}
embed,
iframe,
object,
video {
  @extend %max-width-100; // Make sure embeds and iframes fit their containers
}



// Text input
input[type="email"],
input[type="password"],
input[type="search"],
input[type="text"],
input[type="url"],
textarea {
  @include text-input;
  vertical-align: top;
}

// Textarea is not reset in the Eric Meyer reset; let's do that here
textarea {
  font-size: 100%;
  margin: 0;
}

// Reset input corners
input[type="checkbox"],
input[type="color"],
input[type="file"],
input[type="hidden"],
input[type="image"],
input[type="radio"] {
  border-radius: 0;
  &:focus,
  &:active {
    box-shadow: none;
  }
}

// Select dropdown; try something like Chosen or select-css if you need finer control: https://github.com/filamentgroup/select-css
select {
  @include border-radius;
  @include font-size(text-smaller);
  @include rem( height, spacer(4/5) );
  @include rem( margin-bottom, spacer(1/5) );
  background: colour(select-bottom);
  background-image: linear-gradient( to top, colour(select-bottom), colour(select-top) );
  border: 1px solid colour(interface);
  border-radius: 0;
  box-shadow: 0 1px 2px colour(shadow-light);
  color: colour(text-light);
  cursor: pointer;
  display: inline-block;
  font-weight: $w-body-normal;
  outline: 0;
}

// Remove default Firefox styling of invalid form input; via: https://developer.mozilla.org/en-US/docs/Web/CSS/:invalid
:invalid {
  box-shadow: none;
}



// Hyphenation off for certain elements
abbr,
code,
kbd,
pre,
q,
samp,
var {
  hyphens: none;
}
